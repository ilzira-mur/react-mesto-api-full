{"ast":null,"code":"var _jsxFileName = \"/Users/ilzira/dev/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditProfilePopup from './EditProfilePopup';\nimport api from '../utils/Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n  const [isDeletePopupOpen, setDeletePopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setImagePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(false);\n  const [currentUser, setCurrentUser] = React.useState([]);\n  const [cards, setCards] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const handleEditAvatarClick = () => {\n    setEditAvatarPopupOpen(true);\n  };\n\n  const handleEditProfileClick = () => {\n    setEditProfilePopupOpen(true);\n  };\n\n  const handleAddPlaceClick = () => {\n    setAddPlacePopupOpen(true);\n  };\n\n  const handleDeletePopupOpenClick = card => {\n    setDeletePopupOpen(true);\n    setSelectedCard(card);\n  };\n\n  const handleCardClick = card => {\n    setImagePopupOpen(true);\n    setSelectedCard(card);\n  };\n\n  const closeAllPopups = () => {\n    setEditAvatarPopupOpen(false);\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setDeletePopupOpen(false);\n    setSelectedCard(false);\n    setImagePopupOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      onEditAvatar: handleEditAvatarClick,\n      onEditProfile: handleEditProfileClick,\n      onAddPlace: handleAddPlaceClick,\n      onCardClick: handleCardClick,\n      onCardLike: handleCardLike,\n      onCardDelete: handleDeletePopupOpenClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n      isOpen: isEditProfilePopupOpen,\n      onClose: closeAllPopups,\n      onUpdateUser: handleUpdateUser,\n      isLoading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"4mO9lmbkVeoH1EC5LQ0w6muwzZM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ilzira/dev/mesto-react/src/components/App.js"],"names":["React","Header","Main","Footer","EditProfilePopup","api","App","isEditAvatarPopupOpen","setEditAvatarPopupOpen","useState","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isDeletePopupOpen","setDeletePopupOpen","isImagePopupOpen","setImagePopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","isLoading","setIsLoading","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleDeletePopupOpenClick","card","handleCardClick","closeAllPopups","handleCardLike","handleUpdateUser"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditProfilePopup from './EditProfilePopup';\nimport api from '../utils/Api';\n\nfunction App() {\n\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n  const [isDeletePopupOpen, setDeletePopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setImagePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(false);\n  const [currentUser, setCurrentUser] = React.useState([]);\n  const [cards, setCards] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n\n\n  const handleEditAvatarClick = () => {\n      setEditAvatarPopupOpen(true);\n  };\n\n  const handleEditProfileClick = () => {\n      setEditProfilePopupOpen(true);\n  };\n\n  const handleAddPlaceClick = () => {\n      setAddPlacePopupOpen(true);\n  };\n\n  const handleDeletePopupOpenClick = (card) => {\n      setDeletePopupOpen(true);\n      setSelectedCard(card);\n  };\n\n  const handleCardClick = (card) => {\n      setImagePopupOpen(true);\n      setSelectedCard(card);\n  };\n\n  const closeAllPopups = () => {\n      setEditAvatarPopupOpen(false);\n      setEditProfilePopupOpen(false);\n      setAddPlacePopupOpen(false);\n      setDeletePopupOpen(false);\n      setSelectedCard(false);\n      setImagePopupOpen(false);\n  };\n\n\n  return (\n    <div className=\"page\">\n      <Header/>\n      <Main onEditAvatar={handleEditAvatarClick}\n                        onEditProfile={handleEditProfileClick}\n                        onAddPlace={handleAddPlaceClick}\n                        onCardClick={handleCardClick}\n                        onCardLike={handleCardLike}\n                        onCardDelete={handleDeletePopupOpenClick}\n      />\n      <Footer/>\n      <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} isLoading={isLoading}/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}