{"ast":null,"code":"class Api {\n  constructor({\n    url,\n    headers\n  }) {\n    this.url = url;\n    this.headers = headers;\n  } // проверка ответа сервера\n\n\n  _getResponseData(res) {\n    if (res.ok) {\n      return res.json();\n    } else return Promise.reject(`Произошла ошибка - ${res.status}`);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(this._getResponseData);\n  }\n\n  addNewCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.cardname,\n        link: data.cardlink\n      })\n    }).then(this._getResponseData);\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._url}/cards/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._getResponseData);\n  }\n\n  changeUserAvatar(avatar) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: avatar.avatarlink\n      })\n    }).then(this._getResponseData);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(this._getResponseData);\n  }\n\n  setUserInfo(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.profilename,\n        about: data.profileabout\n      })\n    }).then(this._getResponseData);\n  }\n\n  setLike(id) {\n    return fetch(`${this._url}/cards/likes/${id}`, {\n      method: \"PUT\",\n      headers: this._headers\n    }).then(this._getResponseData);\n  }\n\n  deleteLike(id) {\n    return fetch(`${this._url}/cards/likes/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._getResponseData);\n  }\n\n}\n\nconst api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-23',\n  headers: {\n    authorization: \"8865dd26-fca5-4131-9c42-5dfb67b3f292\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"sources":["/Users/ilzira/dev/mesto-react/src/utils/Api.js"],"names":["Api","constructor","url","headers","_getResponseData","res","ok","json","Promise","reject","status","getInitialCards","fetch","_url","method","_headers","then","addNewCard","data","body","JSON","stringify","name","cardname","link","cardlink","deleteCard","id","changeUserAvatar","avatar","avatarlink","getUserInfo","setUserInfo","profilename","about","profileabout","setLike","deleteLike","api","authorization"],"mappings":"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","sourcesContent":["class Api {\n    constructor({url, headers}) {\n        this.url = url;\n        this.headers = headers;\n    }\n    \n\n  // проверка ответа сервера\n  _getResponseData(res){\n    if (res.ok) {\n      return res.json();\n    } else return Promise.reject(`Произошла ошибка - ${res.status}`);\n  }\n\n    getInitialCards() {\n        return fetch(`${this._url}/cards`, {\n            method: 'GET',\n            headers: this._headers\n        }).then(this._getResponseData);\n    }\n\n    addNewCard(data) {\n    return fetch(`${this._url}/cards`, {\n        method: 'POST',\n        headers: this._headers,\n        body: JSON.stringify({\n          name: data.cardname,\n          link: data.cardlink\n        })\n      }).then(this._getResponseData);\n  }\n\n   deleteCard(id) {\n    return fetch(`${this._url}/cards/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then(this._getResponseData);\n  }\n\n  changeUserAvatar(avatar) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: avatar.avatarlink,\n      }),\n    }).then(this._getResponseData);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n        method: 'GET',\n        headers: this._headers\n      }).then(this._getResponseData);\n  }\n\n  setUserInfo(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.profilename,\n        about: data.profileabout\n      })\n      }).then(this._getResponseData);\n  }\n\n  setLike(id) {\n    return fetch(`${this._url}/cards/likes/${id}`, {\n      method: \"PUT\",\n      headers: this._headers,\n    }).then(this._getResponseData);\n  }\n\n  deleteLike(id) {\n    return fetch(`${this._url}/cards/likes/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then(this._getResponseData);\n  }\n\n}\n\nconst api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-23',\n  headers: {\n    authorization: \"8865dd26-fca5-4131-9c42-5dfb67b3f292\",\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport default api;"]},"metadata":{},"sourceType":"module"}