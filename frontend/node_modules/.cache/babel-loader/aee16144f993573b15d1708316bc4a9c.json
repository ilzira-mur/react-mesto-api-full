{"ast":null,"code":"var _jsxFileName = \"/Users/ilzira/dev/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditProfilePopup from './EditProfilePopup';\nimport api from '../utils/Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n  const [isDeletePopupOpen, setDeletePopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setImagePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(false);\n  const [currentUser, setCurrentUser] = React.useState([]);\n  const [cards, setCards] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const handleEditAvatarClick = () => {\n    setEditAvatarPopupOpen(true);\n  };\n\n  const handleEditProfileClick = () => {\n    setEditProfilePopupOpen(true);\n  };\n\n  const handleAddPlaceClick = () => {\n    setAddPlacePopupOpen(true);\n  };\n\n  const handleDeletePopupOpenClick = card => {\n    setDeletePopupOpen(true);\n    setSelectedCard(card);\n  };\n\n  const handleCardClick = card => {\n    setImagePopupOpen(true);\n    setSelectedCard(card);\n  };\n\n  const closeAllPopups = () => {\n    setEditAvatarPopupOpen(false);\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setDeletePopupOpen(false);\n    setSelectedCard(false);\n    setImagePopupOpen(false);\n  };\n\n  const handleUpdateUser = userInfo => {\n    setIsLoading(true);\n    api.setUserInfo(userInfo).then(userData => {\n      setCurrentUser(userData);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(`${err}`);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  };\n\n  const handleUpdateAvatar = inputValue => {\n    setIsLoading(true);\n    api.setAvatar(inputValue).then(avatar => {\n      setCurrentUser(avatar);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(`${err}`);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  };\n\n  const handleAddPlaceSubmit = inputValue => {\n    setIsLoading(true);\n    api.createCard(inputValue).then(newCard => {\n      setCards([...cards, newCard]);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(`${err}`);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      onEditAvatar: handleEditAvatarClick,\n      onEditProfile: handleEditProfileClick,\n      onAddPlace: handleAddPlaceClick,\n      onCardClick: handleCardClick,\n      onCardLike: handleCardLike,\n      onCardDelete: handleDeletePopupOpenClick,\n      cards: cards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n      isOpen: isEditProfilePopupOpen,\n      onClose: closeAllPopups,\n      onUpdateUser: handleUpdateUser,\n      isLoading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"4mO9lmbkVeoH1EC5LQ0w6muwzZM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ilzira/dev/mesto-react/src/components/App.js"],"names":["React","Header","Main","Footer","EditProfilePopup","api","App","isEditAvatarPopupOpen","setEditAvatarPopupOpen","useState","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isDeletePopupOpen","setDeletePopupOpen","isImagePopupOpen","setImagePopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","isLoading","setIsLoading","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleDeletePopupOpenClick","card","handleCardClick","closeAllPopups","handleUpdateUser","userInfo","setUserInfo","then","userData","catch","err","console","log","finally","handleUpdateAvatar","inputValue","setAvatar","avatar","handleAddPlaceSubmit","createCard","newCard","handleCardLike"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditProfilePopup from './EditProfilePopup';\nimport api from '../utils/Api';\n\nfunction App() {\n\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n  const [isDeletePopupOpen, setDeletePopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setImagePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(false);\n  const [currentUser, setCurrentUser] = React.useState([]);\n  const [cards, setCards] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n\n\n  const handleEditAvatarClick = () => {\n      setEditAvatarPopupOpen(true);\n  };\n\n  const handleEditProfileClick = () => {\n      setEditProfilePopupOpen(true);\n  };\n\n  const handleAddPlaceClick = () => {\n      setAddPlacePopupOpen(true);\n  };\n\n  const handleDeletePopupOpenClick = (card) => {\n      setDeletePopupOpen(true);\n      setSelectedCard(card);\n  };\n\n  const handleCardClick = (card) => {\n      setImagePopupOpen(true);\n      setSelectedCard(card);\n  };\n\n  const closeAllPopups = () => {\n      setEditAvatarPopupOpen(false);\n      setEditProfilePopupOpen(false);\n      setAddPlacePopupOpen(false);\n      setDeletePopupOpen(false);\n      setSelectedCard(false);\n      setImagePopupOpen(false);\n  };\n\n  const handleUpdateUser = (userInfo) => {\n      setIsLoading(true)\n      api.setUserInfo(userInfo)\n          .then((userData) => {\n              setCurrentUser(userData);\n              closeAllPopups();\n          })\n          .catch((err) => {\n              console.log(`${err}`);\n          })\n          .finally(() => {\n              setIsLoading(false)\n          })\n\n  };\n\n  const handleUpdateAvatar = (inputValue) => {\n      setIsLoading(true)\n      api.setAvatar(inputValue)\n          .then((avatar) => {\n              setCurrentUser(avatar);\n              closeAllPopups();\n          })\n          .catch((err) => {\n              console.log(`${err}`);\n          })\n          .finally(() => {\n              setIsLoading(false)\n          })\n  };\n\n  const handleAddPlaceSubmit = (inputValue) => {\n      setIsLoading(true)\n      api.createCard(inputValue)\n          .then((newCard) => {\n              setCards([...cards, newCard]);\n              closeAllPopups();\n          })\n          .catch((err) => {\n              console.log(`${err}`);\n          })\n          .finally(() => {\n              setIsLoading(false)\n          })\n  };\n\n  return (\n    <div className=\"page\">\n      <Header/>\n      <Main onEditAvatar={handleEditAvatarClick}\n                        onEditProfile={handleEditProfileClick}\n                        onAddPlace={handleAddPlaceClick}\n                        onCardClick={handleCardClick}\n                        onCardLike={handleCardLike}\n                        onCardDelete={handleDeletePopupOpenClick}\n                        cards={cards}\n      />\n      <Footer/>\n      <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} isLoading={isLoading}/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}