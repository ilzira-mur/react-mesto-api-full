{"ast":null,"code":"class Api {\n  constructor(config) {\n    this._url = config.url;\n    this._headers = config.headers;\n  }\n\n  getHeader() {\n    const token = localStorage.getItem('token');\n    return { ...this._headers,\n      Authorization: `Bearer ${token}`\n    };\n  } // проверка ответа сервера\n\n\n  _getResponseData(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Произошла ошибка - ${res.status}`);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      method: 'GET',\n      headers: this.getHeader()\n    }).then(this._getResponseData);\n  }\n\n  addNewCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this.getHeader(),\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(this._getResponseData);\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._url}/cards/${id}`, {\n      method: \"DELETE\",\n      headers: this.getHeader()\n    }).then(this._getResponseData);\n  }\n\n  changeUserAvatar(avatar) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this.getHeader(),\n      body: JSON.stringify(avatar)\n    }).then(this._getResponseData);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      method: 'GET',\n      headers: this.getHeader()\n    }).then(this._getResponseData);\n  }\n\n  setUserInfo(data) {\n    return fetch(`${this._url}/users/me`, {\n      headers: this.getHeader(),\n      method: 'PATCH',\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(this._getResponseData);\n  }\n\n  setLike(id) {\n    return fetch(`${this._url}/cards/likes/${id}`, {\n      method: \"PUT\",\n      headers: this.getHeader()\n    }).then(this._getResponseData);\n  }\n\n  deleteLike(id) {\n    return fetch(`${this._url}/cards/likes/${id}`, {\n      method: \"DELETE\",\n      headers: this.getHeader()\n    }).then(this._getResponseData);\n  }\n\n  changeLikeCardStatus(id, isLiked) {\n    return fetch(`${this._url}/cards/likes/${id}`, {\n      method: `${isLiked ? \"PUT\" : \"DELETE\"}`,\n      headers: this.getHeader()\n    }).then(this._getResponseData);\n  }\n\n}\n\nconst api = new Api({\n  url: 'http://localhost:3001',\n  headers: {\n    //authorization: `8865dd26-fca5-4131-9c42-5dfb67b3f292`,\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"sources":["/Users/ilzira/dev/react-mesto-api-full/frontend/src/utils/api.js"],"names":["Api","constructor","config","_url","url","_headers","headers","getHeader","token","localStorage","getItem","Authorization","_getResponseData","res","ok","json","Promise","reject","status","getInitialCards","fetch","method","then","addNewCard","data","body","JSON","stringify","name","link","deleteCard","id","changeUserAvatar","avatar","getUserInfo","setUserInfo","about","setLike","deleteLike","changeLikeCardStatus","isLiked","api"],"mappings":"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","sourcesContent":["class Api {\n    constructor(config) {\n        this._url = config.url;\n        this._headers = config.headers;\n    }\n    \n    getHeader() {\n      const token = localStorage.getItem('token');\n      return {\n          ...this._headers,\n          Authorization: `Bearer ${token}`,\n      }\n  }\n\n  // проверка ответа сервера\n  _getResponseData(res){\n    if (res.ok) {\n      return res.json();\n    } return Promise.reject(`Произошла ошибка - ${res.status}`);\n  }\n\n    getInitialCards() {\n        return fetch(`${this._url}/cards`, {\n            method: 'GET',\n            headers: this.getHeader(),\n        }).then(this._getResponseData);\n    }\n\n    addNewCard(data) {\n    return fetch(`${this._url}/cards`, {\n        method: 'POST',\n        headers: this.getHeader(),\n        body: JSON.stringify({\n          name: data.name,\n          link: data.link\n        })\n      }).then(this._getResponseData);\n  }\n\n   deleteCard(id) {\n    return fetch(`${this._url}/cards/${id}`, {\n      method: \"DELETE\",\n      headers: this.getHeader(),\n    }).then(this._getResponseData);\n  }\n\n  changeUserAvatar(avatar) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this.getHeader(),\n      body: JSON.stringify(avatar),\n    }).then(this._getResponseData);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n        method: 'GET',\n        headers: this.getHeader(),\n      }).then(this._getResponseData);\n  }\n\n  setUserInfo(data) {\n    return fetch(`${this._url}/users/me`, {\n      headers: this.getHeader(),\n      method: 'PATCH',\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n      }).then(this._getResponseData);\n  }\n\n  setLike(id) {\n    return fetch(`${this._url}/cards/likes/${id}`, {\n      method: \"PUT\",\n      headers: this.getHeader(),\n    }).then(this._getResponseData);\n  }\n\n  deleteLike(id) {\n    return fetch(`${this._url}/cards/likes/${id}`, {\n      method: \"DELETE\",\n      headers: this.getHeader(),\n    }).then(this._getResponseData);\n  }\n\n  changeLikeCardStatus(id, isLiked) {\n    return fetch(`${this._url}/cards/likes/${id}`, {\n      method: `${isLiked ? \"PUT\" : \"DELETE\"}`,\n      headers: this.getHeader(),\n    }).then(this._getResponseData);\n  }\n\n}\n\nconst api = new Api({\n  url: 'http://localhost:3001',\n  headers: {\n    //authorization: `8865dd26-fca5-4131-9c42-5dfb67b3f292`,\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport default api;"]},"metadata":{},"sourceType":"module"}