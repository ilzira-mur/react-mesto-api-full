{"ast":null,"code":"var _jsxFileName = \"/Users/ilzira/dev/mesto-react/src/components/PopupWithForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PopupWithForm(props) {\n  _s();\n\n  const handleEscapeClose = event => {\n    if (event.key === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleOverlayClose = event => {\n    if (event.target === event.currentTarget && isOpen) {\n      onClose();\n    }\n  };\n\n  React.useEffect(() => {\n    document.addEventListener(\"keydown\", handleEscapeClose, false);\n    return () => {\n      document.removeEventListener(\"keydown\", handleEscapeClose, false);\n    };\n  }, [isOpen]);\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: `${props.isOpen ? `popup popup_type_${props.name} popup_type_opened` : `popup popup_type_${props.name}`}`,\n    onMouseUp: handleOverlayClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${props.name === \"popup__zoomed\" ? `popup__zoomed` : `popup__container`}`,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"popup__button popup__button_type_close\",\n        type: \"button\",\n        onClick: props.onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"popup__title\",\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: `popup__form popup__form_type_${props.name}`,\n        name: `${props.name}`,\n        noValidate: true,\n        children: props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PopupWithForm, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = PopupWithForm;\nexport default PopupWithForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopupWithForm\");","map":{"version":3,"sources":["/Users/ilzira/dev/mesto-react/src/components/PopupWithForm.js"],"names":["React","PopupWithForm","props","handleEscapeClose","event","key","onClose","handleOverlayClose","target","currentTarget","isOpen","useEffect","document","addEventListener","removeEventListener","name","title","children"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC1B,QAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACjC,QAAIA,KAAK,CAACC,GAAN,KAAc,QAAlB,EAA4B;AACxBC,MAAAA,OAAO;AACV;AACJ,GAJD;;AAMA,QAAMC,kBAAkB,GAAIH,KAAD,IAAW;AAClC,QAAIA,KAAK,CAACI,MAAN,KAAiBJ,KAAK,CAACK,aAAvB,IAAwCC,MAA5C,EAAoD;AAChDJ,MAAAA,OAAO;AACV;AACJ,GAJD;;AAMAN,EAAAA,KAAK,CAACW,SAAN,CAAgB,MAAM;AAClBC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCV,iBAArC,EAAwD,KAAxD;AAEA,WAAO,MAAM;AACTS,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,SAA7B,EAAwCX,iBAAxC,EAA2D,KAA3D;AACH,KAFD;AAGH,GAND,EAMG,CAACO,MAAD,CANH;AAYA,sBACI;AAAS,IAAA,SAAS,EAAG,GAAER,KAAK,CAACQ,MAAN,GAAgB,oBAAmBR,KAAK,CAACa,IAAK,oBAA9C,GAAqE,oBAAmBb,KAAK,CAACa,IAAK,EAAE,EAA5H;AACS,IAAA,SAAS,EAAER,kBADpB;AAAA,2BAEI;AAAK,MAAA,SAAS,EAAG,GAAGL,KAAK,CAACa,IAAN,KAAe,eAAhB,GAAoC,eAApC,GAAsD,kBAAkB,EAA3F;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAC,wCAAlB;AAA2D,QAAA,IAAI,EAAC,QAAhE;AAAyE,QAAA,OAAO,EAAEb,KAAK,CAACI;AAAxF;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA,kBAA8BJ,KAAK,CAACc;AAApC;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAM,QAAA,SAAS,EAAG,gCAA+Bd,KAAK,CAACa,IAAK,EAA5D;AAA+D,QAAA,IAAI,EAAG,GAAEb,KAAK,CAACa,IAAK,EAAnF;AAAsF,QAAA,UAAU,MAAhG;AAAA,kBACKb,KAAK,CAACe;AADX;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GArCQhB,a;;KAAAA,a;AAuCT,eAAeA,aAAf","sourcesContent":["import React from 'react';\n\nfunction PopupWithForm(props) {\n    const handleEscapeClose = (event) => {\n        if (event.key === 'Escape') {\n            onClose();\n        }\n    };\n\n    const handleOverlayClose = (event) => {\n        if (event.target === event.currentTarget && isOpen) {\n            onClose();\n        }\n    };\n\n    React.useEffect(() => {\n        document.addEventListener(\"keydown\", handleEscapeClose, false);\n\n        return () => {\n            document.removeEventListener(\"keydown\", handleEscapeClose, false);\n        };\n    }, [isOpen]);\n\n\n\n    \n\n    return (\n        <article className={`${props.isOpen ? `popup popup_type_${props.name} popup_type_opened` : `popup popup_type_${props.name}`}`}\n                 onMouseUp={handleOverlayClose}>\n            <div className={`${(props.name === \"popup__zoomed\") ? `popup__zoomed` : `popup__container`}`}>\n                <button className=\"popup__button popup__button_type_close\" type=\"button\" onClick={props.onClose}/>\n                <h3 className=\"popup__title\">{props.title}</h3>\n                <form className={`popup__form popup__form_type_${props.name}`} name={`${props.name}`} noValidate>\n                    {props.children}\n                 </form>\n            </div>\n        </article>\n    );\n}\n\nexport default PopupWithForm;"]},"metadata":{},"sourceType":"module"}