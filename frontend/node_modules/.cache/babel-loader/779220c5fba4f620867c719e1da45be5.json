{"ast":null,"code":"export const BASE_URL = \"https://auth.nomoreparties.co\";\n\nconst getResponse = res => {\n  if (res.ok) {\n    return res.json();\n  }\n\n  return Promise.reject(res.status);\n};\n\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      \"Accept\": \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(res => {\n    return getResponse(res);\n  });\n};\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      \"Accept\": \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(res => res.json()).then(data => {\n    if (data.token) {\n      localStorage.setItem(\"jwt\", data.token);\n      return data;\n    }\n  });\n};\nexport const getContent = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      \"Accept\": \"application/json\",\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(res => {\n    return getResponse(res);\n  });\n};","map":{"version":3,"sources":["/Users/ilzira/dev/react-mesto-auth/src/utils/authForm.js"],"names":["BASE_URL","getResponse","res","ok","json","Promise","reject","status","register","email","password","fetch","method","headers","body","JSON","stringify","then","authorize","data","token","localStorage","setItem","getContent"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAAjB;;AAEP,MAAMC,WAAW,GAAIC,GAAD,IAAS;AAC3B,MAAIA,GAAG,CAACC,EAAR,EAAY;AACV,WAAOD,GAAG,CAACE,IAAJ,EAAP;AACD;;AACD,SAAOC,OAAO,CAACC,MAAR,CAAeJ,GAAG,CAACK,MAAnB,CAAP;AACD,CALD;;AAOA,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAOC,KAAK,CAAE,GAAEX,QAAS,SAAb,EAAuB;AACjCY,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACP,gBAAU,kBADH;AAEP,sBAAgB;AAFT,KAFwB;AAMjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACN,MAAAA,QAAD;AAAWD,MAAAA;AAAX,KAAf;AAN2B,GAAvB,CAAL,CAOJQ,IAPI,CAOEf,GAAD,IAAS;AACf,WAAOD,WAAW,CAACC,GAAD,CAAlB;AACD,GATM,CAAP;AAUD,CAXM;AAaP,OAAO,MAAMgB,SAAS,GAAG,CAACT,KAAD,EAAQC,QAAR,KAAqB;AAC5C,SAAOC,KAAK,CAAE,GAAEX,QAAS,SAAb,EAAuB;AACjCY,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACP,gBAAU,kBADH;AAEP,sBAAgB;AAFT,KAFwB;AAMjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBN,MAAAA,QADmB;AAEtBD,MAAAA;AAFsB,KAAf;AAN2B,GAAvB,CAAL,CAWJQ,IAXI,CAWEf,GAAD,IAASA,GAAG,CAACE,IAAJ,EAXV,EAYNa,IAZM,CAYAE,IAAD,IAAU;AACZ,QAAIA,IAAI,CAACC,KAAT,EAAgB;AACdC,MAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BH,IAAI,CAACC,KAAjC;AACA,aAAOD,IAAP;AACD;AACF,GAjBI,CAAP;AAkBD,CAnBM;AAqBP,OAAO,MAAMI,UAAU,GAAIH,KAAD,IAAW;AACnC,SAAOT,KAAK,CAAE,GAAEX,QAAS,WAAb,EAAyB;AACnCY,IAAAA,MAAM,EAAE,KAD2B;AAEnCC,IAAAA,OAAO,EAAE;AACP,gBAAU,kBADH;AAEP,sBAAgB,kBAFT;AAGP,uBAAkB,UAASO,KAAM;AAH1B;AAF0B,GAAzB,CAAL,CAOJH,IAPI,CAOEf,GAAD,IAAS;AACf,WAAOD,WAAW,CAACC,GAAD,CAAlB;AACD,GATM,CAAP;AAUD,CAXM","sourcesContent":["export const BASE_URL = \"https://auth.nomoreparties.co\";\n\nconst getResponse = (res) => {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(res.status);\n};\n\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      \"Accept\": \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({password, email}),\n  }).then((res) => {\n    return getResponse(res);\n  });\n};\n\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      \"Accept\": \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      password,\n\t\t\temail\n    }),\n  })\n    .then((res) => res.json())\n\t\t.then((data) => {\n      if (data.token) {\n        localStorage.setItem(\"jwt\", data.token);\n        return data;\n      }\n    });\n};\n\nexport const getContent = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      \"Accept\": \"application/json\",\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`,\n    },\n  }).then((res) => {\n    return getResponse(res);\n  });\n};"]},"metadata":{},"sourceType":"module"}