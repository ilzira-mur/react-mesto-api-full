{"ast":null,"code":"import _classCallCheck from\"/Users/ilzira/dev/react-mesto-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/ilzira/dev/react-mesto-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";var Api=/*#__PURE__*/function(){function Api(config){_classCallCheck(this,Api);this._url=config.url;this._headers=config.headers;}// проверка ответа сервера\n_createClass(Api,[{key:\"_getResponseData\",value:function _getResponseData(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041F\\u0440\\u043E\\u0438\\u0437\\u043E\\u0448\\u043B\\u0430 \\u043E\\u0448\\u0438\\u0431\\u043A\\u0430 - \".concat(res.status));}},{key:\"getInitialCards\",value:function getInitialCards(){return fetch(\"\".concat(this._url,\"/cards\"),{method:'GET',headers:this._headers}).then(this._getResponseData);}},{key:\"addNewCard\",value:function addNewCard(data){return fetch(\"\".concat(this._url,\"/cards\"),{method:'POST',headers:this._headers,body:JSON.stringify({name:data.name,link:data.link})}).then(this._getResponseData);}},{key:\"deleteCard\",value:function deleteCard(id){return fetch(\"\".concat(this._url,\"/cards/\").concat(id),{method:\"DELETE\",headers:this._headers}).then(this._getResponseData);}},{key:\"changeUserAvatar\",value:function changeUserAvatar(avatar){return fetch(\"\".concat(this._url,\"/users/me/avatar\"),{method:\"PATCH\",headers:this._headers,body:JSON.stringify(avatar)}).then(this._getResponseData);}},{key:\"getUserInfo\",value:function getUserInfo(){return fetch(\"\".concat(this._url,\"/users/me\"),{method:'GET',headers:this._headers}).then(this._getResponseData);}},{key:\"setUserInfo\",value:function setUserInfo(data){return fetch(\"\".concat(this._url,\"/users/me\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({name:data.name,about:data.about})}).then(this._getResponseData);}},{key:\"setLike\",value:function setLike(id){return fetch(\"\".concat(this._url,\"/cards/likes/\").concat(id),{method:\"PUT\",headers:this._headers}).then(this._getResponseData);}},{key:\"deleteLike\",value:function deleteLike(id){return fetch(\"\".concat(this._url,\"/cards/likes/\").concat(id),{method:\"DELETE\",headers:this._headers}).then(this._getResponseData);}},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(id,isLiked){return fetch(\"\".concat(this._url,\"/cards/likes/\").concat(id),{method:\"\".concat(isLiked?\"PUT\":\"DELETE\"),headers:this._headers}).then(this._getResponseData);}}]);return Api;}();var api=new Api({url:'https://mesto.nomoreparties.co/v1/cohort-23',headers:{authorization:\"8865dd26-fca5-4131-9c42-5dfb67b3f292\",\"Content-Type\":\"application/json\"}});export default api;","map":{"version":3,"sources":["/Users/ilzira/dev/react-mesto-auth/src/utils/api.js"],"names":["Api","config","_url","url","_headers","headers","res","ok","json","Promise","reject","status","fetch","method","then","_getResponseData","data","body","JSON","stringify","name","link","id","avatar","about","isLiked","api","authorization"],"mappings":"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","sourcesContent":["class Api {\n    constructor(config) {\n        this._url = config.url;\n        this._headers = config.headers;\n    }\n    \n\n  // проверка ответа сервера\n  _getResponseData(res){\n    if (res.ok) {\n      return res.json();\n    } return Promise.reject(`Произошла ошибка - ${res.status}`);\n  }\n\n    getInitialCards() {\n        return fetch(`${this._url}/cards`, {\n            method: 'GET',\n            headers: this._headers\n        }).then(this._getResponseData);\n    }\n\n    addNewCard(data) {\n    return fetch(`${this._url}/cards`, {\n        method: 'POST',\n        headers: this._headers,\n        body: JSON.stringify({\n          name: data.name,\n          link: data.link\n        })\n      }).then(this._getResponseData);\n  }\n\n   deleteCard(id) {\n    return fetch(`${this._url}/cards/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then(this._getResponseData);\n  }\n\n  changeUserAvatar(avatar) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify(avatar),\n    }).then(this._getResponseData);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n        method: 'GET',\n        headers: this._headers\n      }).then(this._getResponseData);\n  }\n\n  setUserInfo(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n      }).then(this._getResponseData);\n  }\n\n  setLike(id) {\n    return fetch(`${this._url}/cards/likes/${id}`, {\n      method: \"PUT\",\n      headers: this._headers,\n    }).then(this._getResponseData);\n  }\n\n  deleteLike(id) {\n    return fetch(`${this._url}/cards/likes/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then(this._getResponseData);\n  }\n\n  changeLikeCardStatus(id, isLiked) {\n    return fetch(`${this._url}/cards/likes/${id}`, {\n      method: `${isLiked ? \"PUT\" : \"DELETE\"}`,\n      headers: this._headers,\n    }).then(this._getResponseData);\n  }\n\n}\n\nconst api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-23',\n  headers: {\n    authorization: \"8865dd26-fca5-4131-9c42-5dfb67b3f292\",\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport default api;"]},"metadata":{},"sourceType":"module"}