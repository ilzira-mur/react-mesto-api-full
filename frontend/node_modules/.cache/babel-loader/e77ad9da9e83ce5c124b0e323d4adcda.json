{"ast":null,"code":"var _jsxFileName = \"/Users/ilzira/dev/mesto-react/src/components/EditProfilePopup.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Popup from \"./Popup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditProfilePopup = ({\n  isOpen,\n  onClose,\n  onUpdateUser,\n  isLoading\n}) => {\n  _s();\n\n  const fields = ['name', 'about'];\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onUpdateUser({\n      name: inputValue.name,\n      about: inputValue.about\n    });\n  };\n\n  React.useEffect(() => {\n    setInputValue({\n      name: currentUser.name || '',\n      about: currentUser.about || ''\n    });\n    setIsValid(fieldsEnumeration(true));\n    setValidationMessage(fieldsEnumeration(''));\n  }, [currentUser, isOpen, setInputValue, setIsValid, setValidationMessage]);\n  return /*#__PURE__*/_jsxDEV(Popup, {\n    name: \"edit\",\n    isOpen: isOpen,\n    onClose: onClose,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"popup__title\",\n      children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: 'popup__form popup__form_type_edit',\n      name: \"edit\",\n      onSubmit: handleSubmit,\n      novalidate: true,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"profilename\",\n        name: \"profilename\",\n        value: inputValue.name,\n        className: \"popup__input popup__input_type_name\",\n        placeholder: \"\\u0418\\u043C\\u044F\",\n        minlength: \"2\",\n        maxlength: \"40\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"popup__span-error\",\n        id: \"profilename-error\",\n        children: validationMessage.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"profileabout\",\n        name: \"profileabout\",\n        value: inputValue.about,\n        className: \"popup__input popup__input_type_about\",\n        placeholder: \"\\u041F\\u0440\\u043E\\u0444\\u0435\\u0441\\u0441\\u0438\\u044F\",\n        minlength: \"2\",\n        maxlength: \"200\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"popup__span-error\",\n        id: \"profileabout-error\",\n        children: validationMessage.about\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"popup__button popup__button_type_save popup__button_type_save-edit\",\n        children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditProfilePopup, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = EditProfilePopup;\nexport default EditProfilePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"sources":["/Users/ilzira/dev/mesto-react/src/components/EditProfilePopup.js"],"names":["React","Popup","EditProfilePopup","isOpen","onClose","onUpdateUser","isLoading","fields","handleSubmit","event","preventDefault","name","inputValue","about","useEffect","setInputValue","currentUser","setIsValid","fieldsEnumeration","setValidationMessage","validationMessage"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Popup from \"./Popup\";\n\nconst EditProfilePopup = ({isOpen, onClose, onUpdateUser, isLoading}) => {\n    const fields = ['name', 'about'];\n\n    \n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        onUpdateUser({\n            name: inputValue.name,\n            about: inputValue.about,\n        });\n    };\n\n    React.useEffect(() => {\n        setInputValue({\n            name: currentUser.name || '',\n            about: currentUser.about || '',\n        });\n        setIsValid(fieldsEnumeration(true));\n        setValidationMessage(fieldsEnumeration(''));\n    }, [currentUser, isOpen, setInputValue, setIsValid, setValidationMessage]);\n\n    return (\n        <Popup name=\"edit\"\n               isOpen={isOpen}\n               onClose={onClose}>\n            <h3 className=\"popup__title\">Редактировать профиль</h3>\n            <form className={'popup__form popup__form_type_edit'} name=\"edit\" onSubmit={handleSubmit} novalidate>\n              <input type=\"text\" id =\"profilename\" name=\"profilename\" value={inputValue.name} className=\"popup__input popup__input_type_name\" placeholder=\"Имя\" minlength=\"2\" maxlength=\"40\" required/>\n              <span className=\"popup__span-error\" id=\"profilename-error\">{validationMessage.name}</span>\n              <input type=\"text\" id=\"profileabout\" name=\"profileabout\" value={inputValue.about} className=\"popup__input popup__input_type_about\" placeholder=\"Профессия\" minlength=\"2\" maxlength=\"200\" required/>\n              <span className=\"popup__span-error\" id=\"profileabout-error\">{validationMessage.about}</span>\n            <button type=\"submit\" className=\"popup__button popup__button_type_save popup__button_type_save-edit\">Сохранить</button>\n           </form>\n        </Popup>\n    )\n}\n\nexport default EditProfilePopup;"]},"metadata":{},"sourceType":"module"}